# from ttt import cuda_kernel
# import torch
from keras import backend as K 
import tensorflow as tf 
import math
# from functools import lru_cache
# import s2cnn.utils.cuda as cuda_utils
# from s2cnn.utils.decorator import cached_dirpklgz

# from so3_fft import so3_fft, so3_rfft, so3_ifft, so3_rifft, so3_rfft_dumbb, so3_rifft_dumbb
# from so3_rotation import so3_rotation
# from s2_fft import s2_fft, s2_ifft, s2_rfft_dumb
from s2_mm import s2_mm 
from so3_mm import so3_mm

from s2_ft import _setup_s2_ft, s2_rft_dumb
from so3_ft import _setup_so3_ft, so3_rft_dumb

from so3_grid import so3_near_identity_grid
from s2_grid import s2_near_identity_grid


# test s2_mm    (checked)
# '''
# x[4, 1, 2]
# y[4, 2, 2]
# output[10, 1, 2]
# '''
# x = [[[0.0048023-0.40458207j, 1.79408436-0.07827689j]], 
#     [[0.1481331-0.1488403j, -0.14244263+1.66082884j]],
#     [[3.52054643+2.05366168j, -2.62468797-0.62151324j]],
#     [[-0.47777319-0.34876392j, -0.21101613+1.91229308j]]]
# x = K.constant(x, dtype='complex64')
# y = [[[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.04960715+0.j, 0.00772077-0.03679032j]],
#     [[-0.06273715-0.00214314j, -0.09198901+0.04865882j], [0.03957726-0.03430344j, 0.01923412+0.j]], 
#     [[-0.03957726-0.03430344j, -0.09198901-0.04865882j], [0.06273715-0.00214314j, 0.00772077+0.03679032j]], 
#     [[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.01923412+0.j, -0.03957726-0.03430344j]]]
# y = K.constant(y, dtype='complex64')
# output = s2_mm(x, y)
# print(output)
# print('This is s2_mm', K.eval(output))


# test s2_ft 	(checked)
# grid_s2 = s2_near_identity_grid()
# x = [[0.0048023, -0.40458207, 1.79408436, -0.07827689, 0.1481331,-0.1488403, -0.14244263, 1.66082884,
#     3.52054643, 2.05366168, -2.62468797, -0.62151324, -0.47777319, -0.34876392, -0.21101613, 1.91229308,
#     -0.03957726, -0.03430344, -0.09198901, -0.04865882, 0.06273715, -0.00214314, 0.00772077, 0.03679032]]
# x = K.constant(x, dtype='float32')
# output = s2_rft_dumb(x, 3, grid_s2)
# print('This is s2_ft', K.int_shape(output))








# test so3_mm   (checked)
'''
x[10, 1, 2]
y[10, 2, 2]
output[10, 1, 2]
'''
# x = [[[0.0048023-0.40458207j, 1.79408436-0.07827689j]], 
#     [[0.1481331-0.1488403j, -0.14244263+1.66082884j]],
#     [[3.52054643+2.05366168j, -2.62468797-0.62151324j]],
#     [[-0.47777319-0.34876392j, -0.21101613+1.91229308j]],
#     [[0.0048023-0.40458207j, 1.79408436-0.07827689j]], 
#     [[0.1481331-0.1488403j, -0.14244263+1.66082884j]],
#     [[3.52054643+2.05366168j, -2.62468797-0.62151324j]],
#     [[-0.47777319-0.34876392j, -0.21101613+1.91229308j]],
#     [[0.0048023-0.40458207j, 1.79408436-0.07827689j]], 
#     [[0.1481331-0.1488403j, -0.14244263+1.66082884j]]]
# x = K.constant(x, dtype='complex64')
# y = [[[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.04960715+0.j, 0.00772077-0.03679032j]],
#     [[-0.06273715-0.00214314j, -0.09198901+0.04865882j], [0.03957726-0.03430344j, 0.01923412+0.j]], 
#     [[-0.03957726-0.03430344j, -0.09198901-0.04865882j], [0.06273715-0.00214314j, 0.00772077+0.03679032j]], 
#     [[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.01923412+0.j, -0.03957726-0.03430344j]],
#     [[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.04960715+0.j, 0.00772077-0.03679032j]],
#     [[-0.06273715-0.00214314j, -0.09198901+0.04865882j], [0.03957726-0.03430344j, 0.01923412+0.j]], 
#     [[-0.03957726-0.03430344j, -0.09198901-0.04865882j], [0.06273715-0.00214314j, 0.00772077+0.03679032j]], 
#     [[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.01923412+0.j, -0.03957726-0.03430344j]],
#     [[-1.80279253+0.73619164j, -1.03064625-0.56473663j], [0.04960715+0.j, 0.00772077-0.03679032j]],
#     [[-0.06273715-0.00214314j, -0.09198901+0.04865882j], [0.03957726-0.03430344j, 0.01923412+0.j]]]
# y = K.constant(y, dtype='complex64')
# output = so3_mm(x, y)
# print(output)
# print('This is so3_mm', K.eval(output))

# test so3_ft 	(checked)
grid_so3 = so3_near_identity_grid()
x = [[0.0048023, -0.40458207, 1.79408436, -0.07827689, 0.1481331,-0.1488403, -0.14244263, 1.66082884,
    3.52054643, 2.05366168, -2.62468797, -0.62151324, -0.47777319, -0.34876392, -0.21101613, 1.91229308,
    -0.03957726, -0.03430344, -0.09198901, -0.04865882, 0.06273715, -0.00214314, 0.00772077, 0.03679032,
    0.0048023, -0.40458207, 1.79408436, -0.07827689, 0.1481331,-0.1488403, -0.14244263, 1.66082884,
    3.52054643, 2.05366168, -2.62468797, -0.62151324, -0.47777319, -0.34876392, -0.21101613, 1.91229308,
    -0.03957726, -0.03430344, -0.09198901, -0.04865882, 0.06273715, -0.00214314, 0.00772077, 0.03679032,
    0.0048023, -0.40458207, 1.79408436, -0.07827689, 0.1481331,-0.1488403, -0.14244263, 1.66082884,
    3.52054643, 2.05366168, -2.62468797, -0.62151324, -0.47777319, -0.34876392, -0.21101613, 1.91229308,
    -0.03957726, -0.03430344, -0.09198901, -0.04865882, 0.06273715, -0.00214314, 0.00772077, 0.03679032]]
x = K.constant(x, dtype='float32')
output = so3_rft_dumb(x, 3, grid_so3)
# F = _setup_so3_ft(2, grid_so3)
print('This is s2_ft', K.eval(output))




